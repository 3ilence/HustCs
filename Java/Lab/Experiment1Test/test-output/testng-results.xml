<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="106" passed="105" failed="1" skipped="0">
    <reporter-output>
    </reporter-output>
    <suite started-at="2021-04-25T01:56:25Z" name="All Test Suite" finished-at="2021-04-25T01:56:25Z" duration-ms="764">
        <groups>
        </groups>
        <test started-at="2021-04-25T01:56:25Z"
              name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/TermTest.java"
              finished-at="2021-04-25T01:56:25Z" duration-ms="23">
            <class name="hust.cs.javacourse.search.index.TermTest">
                <test-method
                        signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTerm;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@491cc5c9]"
                        started-at="2021-04-25T01:56:25Z" name="testTestEquals" data-provider="testTerm"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="1" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTerm;@527e5409]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[true]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testTestEquals -->
                <test-method
                        signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTerm;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@491cc5c9]"
                        started-at="2021-04-25T01:56:25Z" name="testTestEquals" data-provider="testTerm"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTerm;@1198b989]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[false]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testTestEquals -->
                <test-method
                        signature="testTestToString(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@491cc5c9]"
                        started-at="2021-04-25T01:56:25Z" name="testTestToString" data-provider="testTerm"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[We have a dream.]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[We have a dream.]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testTestToString -->
                <test-method
                        signature="testSetContent(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@491cc5c9]"
                        started-at="2021-04-25T01:56:25Z" name="testSetContent" data-provider="testTerm"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[We have no dream.]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[We have no dream.]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testSetContent -->
                <test-method
                        signature="testCompareTo([Lhust.cs.javacourse.search.index.AbstractTerm;, int)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@491cc5c9]"
                        started-at="2021-04-25T01:56:25Z" name="testCompareTo" data-provider="testTerm"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTerm;@7fc229ab]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[0]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testCompareTo -->
                <test-method
                        signature="testGetContent(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@491cc5c9]"
                        started-at="2021-04-25T01:56:25Z" name="testGetContent" data-provider="testTerm"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[We have a dream.]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[We have a dream.]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testGetContent -->
                <test-method
                        signature="testCompareTo([Lhust.cs.javacourse.search.index.AbstractTerm;, int)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@491cc5c9]"
                        started-at="2021-04-25T01:56:25Z" name="testCompareTo" data-provider="testTerm"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTerm;@2cbb3d47]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[4]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testCompareTo -->
                <test-method
                        signature="testWriteObject(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@491cc5c9]"
                        started-at="2021-04-25T01:56:25Z" name="testWriteObject" data-provider="testTerm"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="7" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[search engine]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[D:/Github_Repository/HustCs/Java/Lab/Experiment1Test/test/config/..//ser/Term.dat]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testWriteObject -->
                <test-method
                        signature="testReadObject(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@491cc5c9]"
                        started-at="2021-04-25T01:56:25Z" name="testReadObject" data-provider="testTerm"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="1" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[search engine]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[D:/Github_Repository/HustCs/Java/Lab/Experiment1Test/test/config/..//ser/Term.dat]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testReadObject -->
            </class> <!-- hust.cs.javacourse.search.index.TermTest -->
        </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/TermTest.java -->
        <test started-at="2021-04-25T01:56:25Z"
              name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/TermTupleTest.java"
              finished-at="2021-04-25T01:56:25Z" duration-ms="6">
            <class name="hust.cs.javacourse.search.index.TermTupleTest">
                <test-method
                        signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTermTuple;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTupleTest@7e0e6aa2]"
                        started-at="2021-04-25T01:56:25Z" name="testTestEquals" data-provider="testTermTuple"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTermTuple;@2ddc8ecb]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[false]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testTestEquals -->
                <test-method
                        signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTermTuple;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTupleTest@7e0e6aa2]"
                        started-at="2021-04-25T01:56:25Z" name="testTestEquals" data-provider="testTermTuple"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTermTuple;@229d10bd]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[false]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testTestEquals -->
                <test-method
                        signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTermTuple;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTupleTest@7e0e6aa2]"
                        started-at="2021-04-25T01:56:25Z" name="testTestEquals" data-provider="testTermTuple"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTermTuple;@6973bf95]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[true]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testTestEquals -->
                <test-method
                        signature="testTestToString(hust.cs.javacourse.search.index.AbstractTermTuple, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.TermTupleTest@7e0e6aa2]"
                        started-at="2021-04-25T01:56:25Z" name="testTestToString" data-provider="testTermTuple"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="4" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[{Term: Search, curPos: 100, freq: 1 }
]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[[Ljava.lang.String;@47542153]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testTestToString -->
            </class> <!-- hust.cs.javacourse.search.index.TermTupleTest -->
        </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/TermTupleTest.java -->
        <test started-at="2021-04-25T01:56:25Z"
              name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/PostingTest.java"
              finished-at="2021-04-25T01:56:25Z" duration-ms="10">
            <class name="hust.cs.javacourse.search.index.PostingTest">
                <test-method
                        signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@704d6e83]"
                        started-at="2021-04-25T01:56:25Z" name="testTestEquals" data-provider="testPosting"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@778d1062]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[false]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testTestEquals -->
                <test-method
                        signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@704d6e83]"
                        started-at="2021-04-25T01:56:25Z" name="testTestEquals" data-provider="testPosting"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@2b6faea6]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[true]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testTestEquals -->
                <test-method
                        signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@704d6e83]"
                        started-at="2021-04-25T01:56:25Z" name="testTestEquals" data-provider="testPosting"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@49c386c8]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[true]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testTestEquals -->
                <test-method
                        signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@704d6e83]"
                        started-at="2021-04-25T01:56:25Z" name="testTestEquals" data-provider="testPosting"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@1f0f1111]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[false]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testTestEquals -->
                <test-method
                        signature="testTestToString(hust.cs.javacourse.search.index.AbstractPosting, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@704d6e83]"
                        started-at="2021-04-25T01:56:25Z" name="testTestToString" data-provider="testPosting"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="3" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[{docId: 1, freq: 4, positions: [10, 100, 320, 400]}]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[[Ljava.lang.String;@56528192]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testTestToString -->
                <test-method
                        signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@704d6e83]"
                        started-at="2021-04-25T01:56:25Z" name="testTestEquals" data-provider="testPosting"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@670002]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[false]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testTestEquals -->
                <test-method
                        signature="testGetDocId(hust.cs.javacourse.search.index.AbstractPosting, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@704d6e83]"
                        started-at="2021-04-25T01:56:25Z" name="testGetDocId" data-provider="testPosting"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[{docId: 1, freq: 4, positions: [10, 100, 320, 400]}]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[1]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testGetDocId -->
                <test-method
                        signature="testSetFreq(hust.cs.javacourse.search.index.AbstractPosting, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@704d6e83]"
                        started-at="2021-04-25T01:56:25Z" name="testSetFreq" data-provider="testPosting"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[{docId: 0, freq: 8, positions: []}]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[8]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testSetFreq -->
                <test-method
                        signature="testSetDocId(hust.cs.javacourse.search.index.AbstractPosting, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@704d6e83]"
                        started-at="2021-04-25T01:56:25Z" name="testSetDocId" data-provider="testPosting"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[{docId: 20, freq: 0, positions: []}]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[20]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testSetDocId -->
                <test-method
                        signature="testGetFreq(hust.cs.javacourse.search.index.AbstractPosting, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@704d6e83]"
                        started-at="2021-04-25T01:56:25Z" name="testGetFreq" data-provider="testPosting"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[{docId: 1, freq: 4, positions: [10, 100, 320, 400]}]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[4]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testGetFreq -->
                <test-method
                        signature="testCompareTo([Lhust.cs.javacourse.search.index.AbstractPosting;, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@704d6e83]"
                        started-at="2021-04-25T01:56:25Z" name="testCompareTo" data-provider="testPosting"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@1e802ef9]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[1]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testCompareTo -->
                <test-method
                        signature="testSetPositions(hust.cs.javacourse.search.index.AbstractPosting, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@704d6e83]"
                        started-at="2021-04-25T01:56:25Z" name="testSetPositions" data-provider="testPosting"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[{docId: 0, freq: 0, positions: [100, 320, 400]}]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[[100, 320, 400]]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testSetPositions -->
                <test-method
                        signature="testSort(hust.cs.javacourse.search.index.AbstractPosting, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@704d6e83]"
                        started-at="2021-04-25T01:56:25Z" name="testSort" data-provider="testPosting"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="1" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[{docId: 1, freq: 4, positions: [10, 100, 320, 400]}]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[[10, 100, 320, 400]]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testSort -->
                <test-method
                        signature="testGetPositions(hust.cs.javacourse.search.index.AbstractPosting, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@704d6e83]"
                        started-at="2021-04-25T01:56:25Z" name="testGetPositions" data-provider="testPosting"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[{docId: 1, freq: 4, positions: [10, 100, 320, 400]}]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[[10, 100, 320, 400]]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testGetPositions -->
                <test-method
                        signature="testWriteObject(hust.cs.javacourse.search.index.AbstractPosting, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@704d6e83]"
                        started-at="2021-04-25T01:56:25Z" name="testWriteObject" data-provider="testPosting"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="3" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[{docId: 1, freq: 4, positions: [10, 100, 320, 400]}]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[D:/Github_Repository/HustCs/Java/Lab/Experiment1Test/test/config/..//ser/Posting.dat]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testWriteObject -->
                <test-method
                        signature="testReadObject(hust.cs.javacourse.search.index.AbstractPosting, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@704d6e83]"
                        started-at="2021-04-25T01:56:25Z" name="testReadObject" data-provider="testPosting"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="1" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[{docId: 1, freq: 4, positions: [10, 100, 320, 400]}]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[D:/Github_Repository/HustCs/Java/Lab/Experiment1Test/test/config/..//ser/Posting.dat]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testReadObject -->
            </class> <!-- hust.cs.javacourse.search.index.PostingTest -->
        </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/PostingTest.java -->
        <test started-at="2021-04-25T01:56:25Z"
              name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/PostingListTest.java"
              finished-at="2021-04-25T01:56:25Z" duration-ms="7">
            <class name="hust.cs.javacourse.search.index.PostingListTest">
                <test-method
                        signature="testTestToString(hust.cs.javacourse.search.index.AbstractPostingList, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@77846d2c]"
                        started-at="2021-04-25T01:56:25Z" name="testTestToString" data-provider="testPostingList"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="1" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[{docId: 1, freq: 4, positions: [1, 2, 3, 4]} -> {docId: 2, freq: 2, positions: [5, 6]}
]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[[Ljava.lang.String;@460d0a57]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testTestToString -->
                <test-method
                        signature="testAdd(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@77846d2c]"
                        started-at="2021-04-25T01:56:25Z" name="testAdd" data-provider="testPostingList"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[{docId: 1, freq: 4, positions: [1, 2, 3, 4]} -> {docId: 2, freq: 2, positions: [5, 6]}
]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@2ea227af]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testAdd -->
                <test-method
                        signature="testGet(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@77846d2c]"
                        started-at="2021-04-25T01:56:25Z" name="testGet" data-provider="testPostingList"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[{docId: 1, freq: 4, positions: [1, 2, 3, 4]} -> {docId: 2, freq: 2, positions: [5, 6]}
]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@363ee3a2]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testGet -->
                <test-method
                        signature="testTestAdd(hust.cs.javacourse.search.index.AbstractPostingList, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@77846d2c]"
                        started-at="2021-04-25T01:56:25Z" name="testTestAdd" data-provider="testPostingList"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[{docId: 1, freq: 4, positions: [1, 2, 3, 4]} -> {docId: 2, freq: 2, positions: [5, 6]}
]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[[{docId: 1, freq: 4, positions: [1, 2, 3, 4]}, {docId: 1, freq: 4, positions: [2, 4, 3, 1]}, {docId: 2, freq: 2, positions: [5, 6]}]]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testTestAdd -->
                <test-method
                        signature="testIndexOf(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@77846d2c]"
                        started-at="2021-04-25T01:56:25Z" name="testIndexOf" data-provider="testPostingList"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[{docId: 1, freq: 4, positions: [1, 2, 3, 4]} -> {docId: 2, freq: 2, positions: [5, 6]}
]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@4690b489]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testIndexOf -->
                <test-method
                        signature="testTestIndexOf(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@77846d2c]"
                        started-at="2021-04-25T01:56:25Z" name="testTestIndexOf" data-provider="testPostingList"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="1" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[{docId: 1, freq: 4, positions: [1, 2, 3, 4]} -> {docId: 2, freq: 2, positions: [5, 6]}
]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@7f552bd3]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testTestIndexOf -->
                <test-method
                        signature="testRemove(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@77846d2c]"
                        started-at="2021-04-25T01:56:25Z" name="testRemove" data-provider="testPostingList"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[
]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@79b06cab]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testRemove -->
                <test-method
                        signature="testSize(hust.cs.javacourse.search.index.AbstractPostingList, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@77846d2c]"
                        started-at="2021-04-25T01:56:25Z" name="testSize" data-provider="testPostingList"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[
]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[0]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testSize -->
                <test-method
                        signature="testTestRemove(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@77846d2c]"
                        started-at="2021-04-25T01:56:25Z" name="testTestRemove" data-provider="testPostingList"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[
]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@3c22fc4c]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testTestRemove -->
                <test-method
                        signature="testClear(hust.cs.javacourse.search.index.AbstractPostingList, java.lang.Object)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@77846d2c]"
                        started-at="2021-04-25T01:56:25Z" name="testClear" data-provider="testPostingList"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[
]]>
                            </value>
                        </param>
                        <param index="1">
                            <value is-null="true"/>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testClear -->
                <test-method
                        signature="testSize(hust.cs.javacourse.search.index.AbstractPostingList, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@77846d2c]"
                        started-at="2021-04-25T01:56:25Z" name="testSize" data-provider="testPostingList"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[{docId: 1, freq: 4, positions: [1, 2, 3, 4]} -> {docId: 2, freq: 2, positions: [5, 6]}
]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[2]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testSize -->
                <test-method
                        signature="testIsEmpty(hust.cs.javacourse.search.index.AbstractPostingList, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@77846d2c]"
                        started-at="2021-04-25T01:56:25Z" name="testIsEmpty" data-provider="testPostingList"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="1" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[{docId: 1, freq: 4, positions: [1, 2, 3, 4]} -> {docId: 2, freq: 2, positions: [5, 6]}
]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[false]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testIsEmpty -->
                <test-method
                        signature="testContains(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@77846d2c]"
                        started-at="2021-04-25T01:56:25Z" name="testContains" data-provider="testPostingList"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[{docId: 1, freq: 4, positions: [1, 2, 3, 4]}
]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@4386f16]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testContains -->
                <test-method
                        signature="testSort(hust.cs.javacourse.search.index.AbstractPostingList, [Ljava.lang.Integer;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@77846d2c]"
                        started-at="2021-04-25T01:56:25Z" name="testSort" data-provider="testPostingList"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[{docId: 2, freq: 4, positions: [5, 9, 7, 8]} -> {docId: 3, freq: 2, positions: [10, 11]} -> {docId: 4, freq: 4, positions: [1, 4, 3, 2]}
]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[[Ljava.lang.Integer;@3eb7fc54]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testSort -->
                <test-method
                        signature="testWriteObject(hust.cs.javacourse.search.index.AbstractPostingList, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@77846d2c]"
                        started-at="2021-04-25T01:56:25Z" name="testWriteObject" data-provider="testPostingList"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="2" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[{docId: 1, freq: 4, positions: [1, 2, 3, 4]} -> {docId: 2, freq: 2, positions: [5, 6]}
]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[D:/Github_Repository/HustCs/Java/Lab/Experiment1Test/test/config/..//ser/PostingList.dat]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testWriteObject -->
                <test-method
                        signature="testIsEmpty(hust.cs.javacourse.search.index.AbstractPostingList, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@77846d2c]"
                        started-at="2021-04-25T01:56:25Z" name="testIsEmpty" data-provider="testPostingList"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[
]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[true]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testIsEmpty -->
                <test-method
                        signature="testReadObject(hust.cs.javacourse.search.index.AbstractPostingList, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@77846d2c]"
                        started-at="2021-04-25T01:56:25Z" name="testReadObject" data-provider="testPostingList"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[{docId: 1, freq: 4, positions: [1, 2, 3, 4]} -> {docId: 2, freq: 2, positions: [5, 6]}
]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[D:/Github_Repository/HustCs/Java/Lab/Experiment1Test/test/config/..//ser/PostingList.dat]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testReadObject -->
            </class> <!-- hust.cs.javacourse.search.index.PostingListTest -->
        </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/PostingListTest.java -->
        <test started-at="2021-04-25T01:56:25Z"
              name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/DocumentTest.java"
              finished-at="2021-04-25T01:56:25Z" duration-ms="4">
            <class name="hust.cs.javacourse.search.index.DocumentTest">
                <test-method
                        signature="testSetDocId(hust.cs.javacourse.search.index.AbstractDocument, int)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@5579bb86]"
                        started-at="2021-04-25T01:56:25Z" name="testSetDocId" data-provider="testDocument"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="1" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[{ docId: 2, docPath: null,  }]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[2]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testSetDocId -->
                <test-method
                        signature="testGetDocId(hust.cs.javacourse.search.index.AbstractDocument, int)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@5579bb86]"
                        started-at="2021-04-25T01:56:25Z" name="testGetDocId" data-provider="testDocument"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[{ docId: 1, docPath: C:/1.txt, {Term: aaa, curPos: 17, freq: 1 }
,  }]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[1]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testGetDocId -->
                <test-method
                        signature="testGetTuples(hust.cs.javacourse.search.index.AbstractDocument, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@5579bb86]"
                        started-at="2021-04-25T01:56:25Z" name="testGetTuples" data-provider="testDocument"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[{ docId: 1, docPath: C:/1.txt, {Term: aaa, curPos: 17, freq: 1 }
, {Term: bbb, curPos: 30, freq: 1 }
,  }]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[[{Term: aaa, curPos: 17, freq: 1 }
, {Term: bbb, curPos: 30, freq: 1 }
]]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testGetTuples -->
                <test-method
                        signature="testSetDocPath(hust.cs.javacourse.search.index.AbstractDocument, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@5579bb86]"
                        started-at="2021-04-25T01:56:25Z" name="testSetDocPath" data-provider="testDocument"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[{ docId: 0, docPath: C:/2.txt,  }]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[C:/2.txt]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testSetDocPath -->
                <test-method
                        signature="testContains(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractTermTuple)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@5579bb86]"
                        started-at="2021-04-25T01:56:25Z" name="testContains" data-provider="testDocument"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[{ docId: 1, docPath: C:/1.txt, {Term: aaa, curPos: 17, freq: 1 }
, {Term: bbb, curPos: 30, freq: 1 }
,  }]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[{Term: bbb, curPos: 30, freq: 1 }
]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testContains -->
                <test-method
                        signature="testAddTuple(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractTermTuple)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@5579bb86]"
                        started-at="2021-04-25T01:56:25Z" name="testAddTuple" data-provider="testDocument"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[{ docId: 1, docPath: C:/1.txt, {Term: aaa, curPos: 17, freq: 1 }
,  }]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[{Term: aaa, curPos: 17, freq: 1 }
]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testAddTuple -->
                <test-method
                        signature="testContains(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractTermTuple)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@5579bb86]"
                        started-at="2021-04-25T01:56:25Z" name="testContains" data-provider="testDocument"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[{ docId: 1, docPath: C:/1.txt, {Term: aaa, curPos: 17, freq: 1 }
, {Term: bbb, curPos: 30, freq: 1 }
,  }]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[{Term: aaa, curPos: 17, freq: 1 }
]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testContains -->
                <test-method
                        signature="testGetTuple(hust.cs.javacourse.search.index.AbstractDocument, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@5579bb86]"
                        started-at="2021-04-25T01:56:25Z" name="testGetTuple" data-provider="testDocument"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[{ docId: 1, docPath: C:/1.txt, {Term: aaa, curPos: 17, freq: 1 }
, {Term: bbb, curPos: 30, freq: 1 }
,  }]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[[{Term: aaa, curPos: 17, freq: 1 }
, {Term: bbb, curPos: 30, freq: 1 }
]]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testGetTuple -->
                <test-method
                        signature="testGetDocPath(hust.cs.javacourse.search.index.AbstractDocument, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@5579bb86]"
                        started-at="2021-04-25T01:56:25Z" name="testGetDocPath" data-provider="testDocument"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[{ docId: 1, docPath: C:/1.txt, {Term: aaa, curPos: 17, freq: 1 }
,  }]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[C:/1.txt]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testGetDocPath -->
                <test-method
                        signature="testGetTupleSize(hust.cs.javacourse.search.index.AbstractDocument, int)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@5579bb86]"
                        started-at="2021-04-25T01:56:25Z" name="testGetTupleSize" data-provider="testDocument"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[{ docId: 1, docPath: C:/1.txt, {Term: aaa, curPos: 17, freq: 1 }
, {Term: bbb, curPos: 30, freq: 1 }
,  }]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[2]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testGetTupleSize -->
                <test-method
                        signature="testTestToString(hust.cs.javacourse.search.index.AbstractDocument, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@5579bb86]"
                        started-at="2021-04-25T01:56:25Z" name="testTestToString" data-provider="testDocument"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="1" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[{ docId: 1, docPath: C:/1.txt, {Term: aaa, curPos: 17, freq: 1 }
, {Term: bbb, curPos: 30, freq: 1 }
,  }]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[[Ljava.lang.String;@69b2283a]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testTestToString -->
                <test-method
                        signature="testGetTupleSize(hust.cs.javacourse.search.index.AbstractDocument, int)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@5579bb86]"
                        started-at="2021-04-25T01:56:25Z" name="testGetTupleSize" data-provider="testDocument"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[{ docId: 1, docPath: C:/1.txt,  }]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[0]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testGetTupleSize -->
            </class> <!-- hust.cs.javacourse.search.index.DocumentTest -->
        </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/DocumentTest.java -->
        <test started-at="2021-04-25T01:56:25Z"
              name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/TermTupleScannerTest.java"
              finished-at="2021-04-25T01:56:25Z" duration-ms="8">
            <class name="hust.cs.javacourse.search.parse.TermTupleScannerTest">
                <test-method
                        signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.TermTupleScannerTest@10d59286]"
                        started-at="2021-04-25T01:56:25Z" name="testNext" data-provider="testTermTupleScanner"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="1" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[hust.cs.javacourse.search.parse.impl.TermTupleScanner@6f96c77]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[[{Term: aaa, curPos: 0, freq: 1 }
, {Term: bbb, curPos: 1, freq: 1 }
, {Term: ccc, curPos: 2, freq: 1 }
, {Term: ddd, curPos: 3, freq: 1 }
, {Term: is, curPos: 4, freq: 1 }
, {Term: f17, curPos: 5, freq: 1 }
, {Term: 2020, curPos: 6, freq: 1 }
, {Term: ab, curPos: 7, freq: 1 }
, {Term: ababababababababababab, curPos: 8, freq: 1 }
]]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testNext -->
                <test-method
                        signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.TermTupleScannerTest@10d59286]"
                        started-at="2021-04-25T01:56:25Z" name="testNext" data-provider="testTermTupleScanner"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[hust.cs.javacourse.search.parse.impl.TermTupleScanner@be64738]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[[{Term: activity, curPos: 0, freq: 1 }
, {Term: destination, curPos: 1, freq: 1 }
, {Term: emergency, curPos: 2, freq: 1 }
, {Term: 26%, curPos: 3, freq: 1 }
, {Term: u571, curPos: 4, freq: 1 }
, {Term: because, curPos: 5, freq: 1 }
, {Term: hence, curPos: 6, freq: 1 }
, {Term: capital, curPos: 7, freq: 1 }
, {Term: i, curPos: 8, freq: 1 }
, {Term: frozen, curPos: 9, freq: 1 }
, {Term: benefits, curPos: 10, freq: 1 }
, {Term: google, curPos: 11, freq: 1 }
, {Term: hahahahahahahahahahahahah, curPos: 12, freq: 1 }
, {Term: ha, curPos: 13, freq: 1 }
, {Term: frozen, curPos: 14, freq: 1 }
, {Term: google, curPos: 15, freq: 1 }
]]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testNext -->
            </class> <!-- hust.cs.javacourse.search.parse.TermTupleScannerTest -->
        </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/TermTupleScannerTest.java -->
        <test started-at="2021-04-25T01:56:25Z"
              name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/StopWordTermTupleFilterTest.java"
              finished-at="2021-04-25T01:56:25Z" duration-ms="5">
            <class name="hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest">
                <test-method
                        signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest@68ceda24]"
                        started-at="2021-04-25T01:56:25Z" name="testNext" data-provider="testStopWordTermTupleFilter"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[hust.cs.javacourse.search.parse.impl.StopWordTermTupleFilter@cd3fee8]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[[{Term: aaa, curPos: 0, freq: 1 }
, {Term: bbb, curPos: 1, freq: 1 }
, {Term: ccc, curPos: 2, freq: 1 }
, {Term: ddd, curPos: 3, freq: 1 }
, {Term: f17, curPos: 4, freq: 1 }
, {Term: 2020, curPos: 5, freq: 1 }
, {Term: ab, curPos: 6, freq: 1 }
, {Term: ababababababababababab, curPos: 7, freq: 1 }
]]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testNext -->
                <test-method
                        signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest@68ceda24]"
                        started-at="2021-04-25T01:56:25Z" name="testNext" data-provider="testStopWordTermTupleFilter"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[hust.cs.javacourse.search.parse.impl.StopWordTermTupleFilter@470f1802]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[[{Term: activity, curPos: 0, freq: 1 }
, {Term: destination, curPos: 1, freq: 1 }
, {Term: emergency, curPos: 2, freq: 1 }
, {Term: 26%, curPos: 3, freq: 1 }
, {Term: u571, curPos: 4, freq: 1 }
, {Term: capital, curPos: 7, freq: 1 }
, {Term: frozen, curPos: 9, freq: 1 }
, {Term: benefits, curPos: 10, freq: 1 }
, {Term: google, curPos: 11, freq: 1 }
, {Term: hahahahahahahahahahahahah, curPos: 12, freq: 1 }
, {Term: ha, curPos: 13, freq: 1 }
, {Term: frozen, curPos: 14, freq: 1 }
, {Term: google, curPos: 15, freq: 1 }
]]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testNext -->
                <test-method
                        signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest@68ceda24]"
                        started-at="2021-04-25T01:56:25Z" name="testNext" data-provider="testStopWordTermTupleFilter"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[hust.cs.javacourse.search.parse.impl.StopWordTermTupleFilter@3e2e18f2]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[[{Term: aaa, curPos: 0, freq: 1 }
, {Term: bbb, curPos: 1, freq: 1 }
, {Term: ccc, curPos: 3, freq: 1 }
, {Term: ddd, curPos: 4, freq: 1 }
, {Term: f17, curPos: 6, freq: 1 }
, {Term: 2020, curPos: 7, freq: 1 }
, {Term: ab, curPos: 8, freq: 1 }
, {Term: ababababababababababab, curPos: 10, freq: 1 }
]]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testNext -->
            </class> <!-- hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest -->
        </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/StopWordTermTupleFilterTest.java -->
        <test started-at="2021-04-25T01:56:25Z"
              name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/PatternTermTupleFilterTest.java"
              finished-at="2021-04-25T01:56:25Z" duration-ms="2">
            <class name="hust.cs.javacourse.search.parse.PatternTermTupleFilterTest">
                <test-method
                        signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.PatternTermTupleFilterTest@543788f3]"
                        started-at="2021-04-25T01:56:25Z" name="testNext" data-provider="testPatternTermTupleFilter"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[hust.cs.javacourse.search.parse.impl.PatternTermTupleFilter@70e8f8e]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[[{Term: activity, curPos: 0, freq: 1 }
, {Term: destination, curPos: 1, freq: 1 }
, {Term: emergency, curPos: 2, freq: 1 }
, {Term: because, curPos: 5, freq: 1 }
, {Term: hence, curPos: 6, freq: 1 }
, {Term: capital, curPos: 7, freq: 1 }
, {Term: i, curPos: 8, freq: 1 }
, {Term: frozen, curPos: 9, freq: 1 }
, {Term: benefits, curPos: 10, freq: 1 }
, {Term: google, curPos: 11, freq: 1 }
, {Term: hahahahahahahahahahahahah, curPos: 12, freq: 1 }
, {Term: ha, curPos: 13, freq: 1 }
, {Term: frozen, curPos: 14, freq: 1 }
, {Term: google, curPos: 15, freq: 1 }
]]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testNext -->
                <test-method
                        signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.PatternTermTupleFilterTest@543788f3]"
                        started-at="2021-04-25T01:56:25Z" name="testNext" data-provider="testPatternTermTupleFilter"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[hust.cs.javacourse.search.parse.impl.PatternTermTupleFilter@2e4b8173]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[[{Term: aaa, curPos: 0, freq: 1 }
, {Term: bbb, curPos: 2, freq: 1 }
, {Term: ab, curPos: 3, freq: 1 }
, {Term: ccc, curPos: 4, freq: 1 }
, {Term: ddd, curPos: 5, freq: 1 }
, {Term: ababababababababababab, curPos: 7, freq: 1 }
]]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testNext -->
            </class> <!-- hust.cs.javacourse.search.parse.PatternTermTupleFilterTest -->
        </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/PatternTermTupleFilterTest.java -->
        <test started-at="2021-04-25T01:56:25Z"
              name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/LengthTermTupleFilterTest.java"
              finished-at="2021-04-25T01:56:25Z" duration-ms="2">
            <class name="hust.cs.javacourse.search.parse.LengthTermTupleFilterTest">
                <test-method
                        signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.LengthTermTupleFilterTest@5a4041cc]"
                        started-at="2021-04-25T01:56:25Z" name="testNext" data-provider="testLengthTermTupleFilter"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[hust.cs.javacourse.search.parse.impl.LengthTermTupleFilter@34b7ac2f]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[[{Term: aaa, curPos: 0, freq: 1 }
, {Term: bbb, curPos: 1, freq: 1 }
, {Term: ccc, curPos: 3, freq: 1 }
, {Term: ddd, curPos: 4, freq: 1 }
, {Term: f17, curPos: 5, freq: 1 }
, {Term: 2020, curPos: 6, freq: 1 }
]]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testNext -->
                <test-method
                        signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.LengthTermTupleFilterTest@5a4041cc]"
                        started-at="2021-04-25T01:56:25Z" name="testNext" data-provider="testLengthTermTupleFilter"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="1" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[hust.cs.javacourse.search.parse.impl.LengthTermTupleFilter@e056f20]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[[{Term: activity, curPos: 0, freq: 1 }
, {Term: destination, curPos: 1, freq: 1 }
, {Term: emergency, curPos: 2, freq: 1 }
, {Term: 26%, curPos: 3, freq: 1 }
, {Term: u571, curPos: 4, freq: 1 }
, {Term: because, curPos: 5, freq: 1 }
, {Term: hence, curPos: 6, freq: 1 }
, {Term: capital, curPos: 7, freq: 1 }
, {Term: frozen, curPos: 9, freq: 1 }
, {Term: benefits, curPos: 10, freq: 1 }
, {Term: google, curPos: 11, freq: 1 }
, {Term: frozen, curPos: 14, freq: 1 }
, {Term: google, curPos: 15, freq: 1 }
]]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testNext -->
            </class> <!-- hust.cs.javacourse.search.parse.LengthTermTupleFilterTest -->
        </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/LengthTermTupleFilterTest.java -->
        <test started-at="2021-04-25T01:56:25Z"
              name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/ScannerFilterAllInOneTest.java"
              finished-at="2021-04-25T01:56:25Z" duration-ms="2">
            <class name="hust.cs.javacourse.search.parse.ScannerFilterAllInOneTest">
                <test-method
                        signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.ScannerFilterAllInOneTest@1068e947]"
                        started-at="2021-04-25T01:56:25Z" name="testNext" data-provider="testScannerFilterAllInOne"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="1" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[hust.cs.javacourse.search.parse.impl.PatternTermTupleFilter@57c758ac]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[[{Term: activity, curPos: 0, freq: 1 }
, {Term: destination, curPos: 1, freq: 1 }
, {Term: emergency, curPos: 2, freq: 1 }
, {Term: capital, curPos: 7, freq: 1 }
, {Term: frozen, curPos: 9, freq: 1 }
, {Term: benefits, curPos: 10, freq: 1 }
, {Term: google, curPos: 11, freq: 1 }
, {Term: frozen, curPos: 14, freq: 1 }
, {Term: google, curPos: 15, freq: 1 }
]]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testNext -->
                <test-method
                        signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.ScannerFilterAllInOneTest@1068e947]"
                        started-at="2021-04-25T01:56:25Z" name="testNext" data-provider="testScannerFilterAllInOne"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[hust.cs.javacourse.search.parse.impl.PatternTermTupleFilter@67a20f67]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[[{Term: aaa, curPos: 1, freq: 1 }
, {Term: bbb, curPos: 2, freq: 1 }
, {Term: ccc, curPos: 4, freq: 1 }
, {Term: ddd, curPos: 6, freq: 1 }
]]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testNext -->
            </class> <!-- hust.cs.javacourse.search.parse.ScannerFilterAllInOneTest -->
        </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/ScannerFilterAllInOneTest.java -->
        <test started-at="2021-04-25T01:56:25Z"
              name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/DocumentBuilderTest.java"
              finished-at="2021-04-25T01:56:25Z" duration-ms="314">
            <class name="hust.cs.javacourse.search.index.DocumentBuilderTest">
                <test-method
                        signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@5427c60c]"
                        started-at="2021-04-25T01:56:25Z" name="testBuild" data-provider="testDocumentBuilder"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[{ docId: 0, docPath: D:/Github_Repository/HustCs/Java/Lab/Experiment1Test/test/config/..//text/2.txt, {Term: activity, curPos: 0, freq: 1 }
, {Term: destination, curPos: 1, freq: 1 }
, {Term: emergency, curPos: 2, freq: 1 }
, {Term: 26%, curPos: 3, freq: 1 }
, {Term: u571, curPos: 4, freq: 1 }
, {Term: because, curPos: 5, freq: 1 }
, {Term: hence, curPos: 6, freq: 1 }
, {Term: capital, curPos: 7, freq: 1 }
, {Term: i, curPos: 8, freq: 1 }
, {Term: frozen, curPos: 9, freq: 1 }
, {Term: benefits, curPos: 10, freq: 1 }
, {Term: google, curPos: 11, freq: 1 }
, {Term: hahahahahahahahahahahahah, curPos: 12, freq: 1 }
, {Term: ha, curPos: 13, freq: 1 }
, {Term: frozen, curPos: 14, freq: 1 }
, {Term: google, curPos: 15, freq: 1 }
,  }]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[{ docId: 0, docPath: D:\IdeaWorkspace\SeachEngine/text/2.txt, {Term: activity, curPos: 0, freq: 1 }
, {Term: destination, curPos: 1, freq: 1 }
, {Term: emergency, curPos: 2, freq: 1 }
, {Term: 26%, curPos: 3, freq: 1 }
, {Term: u571, curPos: 4, freq: 1 }
, {Term: because, curPos: 5, freq: 1 }
, {Term: hence, curPos: 6, freq: 1 }
, {Term: capital, curPos: 7, freq: 1 }
, {Term: i, curPos: 8, freq: 1 }
, {Term: frozen, curPos: 9, freq: 1 }
, {Term: benefits, curPos: 10, freq: 1 }
, {Term: google, curPos: 11, freq: 1 }
, {Term: hahahahahahahahahahahahah, curPos: 12, freq: 1 }
, {Term: ha, curPos: 13, freq: 1 }
, {Term: frozen, curPos: 14, freq: 1 }
, {Term: google, curPos: 15, freq: 1 }
,  }]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testBuild -->
                <test-method
                        signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@5427c60c]"
                        started-at="2021-04-25T01:56:25Z" name="testBuild" data-provider="testDocumentBuilder"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[{ docId: 0, docPath: D:/Github_Repository/HustCs/Java/Lab/Experiment1Test/test/config/..//text/2.txt, {Term: activity, curPos: 0, freq: 1 }
, {Term: destination, curPos: 1, freq: 1 }
, {Term: emergency, curPos: 2, freq: 1 }
, {Term: capital, curPos: 7, freq: 1 }
, {Term: frozen, curPos: 9, freq: 1 }
, {Term: benefits, curPos: 10, freq: 1 }
, {Term: google, curPos: 11, freq: 1 }
, {Term: frozen, curPos: 14, freq: 1 }
, {Term: google, curPos: 15, freq: 1 }
,  }]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[{ docId: 0, docPath: D:\IdeaWorkspace\SeachEngine/text/2.txt, {Term: activity, curPos: 0, freq: 1 }
, {Term: destination, curPos: 1, freq: 1 }
, {Term: emergency, curPos: 2, freq: 1 }
, {Term: capital, curPos: 7, freq: 1 }
, {Term: frozen, curPos: 9, freq: 1 }
, {Term: benefits, curPos: 10, freq: 1 }
, {Term: google, curPos: 11, freq: 1 }
, {Term: frozen, curPos: 14, freq: 1 }
, {Term: google, curPos: 15, freq: 1 }
,  }]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testBuild -->
                <test-method
                        signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@5427c60c]"
                        started-at="2021-04-25T01:56:25Z" name="testBuild" data-provider="testDocumentBuilder"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[{ docId: 0, docPath: D:/Github_Repository/HustCs/Java/Lab/Experiment1Test/test/config/..//text/2.txt, {Term: activity, curPos: 0, freq: 1 }
, {Term: destination, curPos: 1, freq: 1 }
, {Term: emergency, curPos: 2, freq: 1 }
, {Term: 26%, curPos: 3, freq: 1 }
, {Term: u571, curPos: 4, freq: 1 }
, {Term: because, curPos: 5, freq: 1 }
, {Term: hence, curPos: 6, freq: 1 }
, {Term: capital, curPos: 7, freq: 1 }
, {Term: frozen, curPos: 9, freq: 1 }
, {Term: benefits, curPos: 10, freq: 1 }
, {Term: google, curPos: 11, freq: 1 }
, {Term: frozen, curPos: 14, freq: 1 }
, {Term: google, curPos: 15, freq: 1 }
,  }]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[{ docId: 0, docPath: D:\IdeaWorkspace\SeachEngine/text/2.txt, {Term: activity, curPos: 0, freq: 1 }
, {Term: destination, curPos: 1, freq: 1 }
, {Term: emergency, curPos: 2, freq: 1 }
, {Term: 26%, curPos: 3, freq: 1 }
, {Term: u571, curPos: 4, freq: 1 }
, {Term: because, curPos: 5, freq: 1 }
, {Term: hence, curPos: 6, freq: 1 }
, {Term: capital, curPos: 7, freq: 1 }
, {Term: frozen, curPos: 9, freq: 1 }
, {Term: benefits, curPos: 10, freq: 1 }
, {Term: google, curPos: 11, freq: 1 }
, {Term: frozen, curPos: 14, freq: 1 }
, {Term: google, curPos: 15, freq: 1 }
,  }]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testBuild -->
                <test-method
                        signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@5427c60c]"
                        started-at="2021-04-25T01:56:25Z" name="testBuild" data-provider="testDocumentBuilder"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[{ docId: 0, docPath: D:/Github_Repository/HustCs/Java/Lab/Experiment1Test/test/config/..//text/2.txt, {Term: activity, curPos: 0, freq: 1 }
, {Term: destination, curPos: 1, freq: 1 }
, {Term: emergency, curPos: 2, freq: 1 }
, {Term: 26%, curPos: 3, freq: 1 }
, {Term: u571, curPos: 4, freq: 1 }
, {Term: capital, curPos: 7, freq: 1 }
, {Term: frozen, curPos: 9, freq: 1 }
, {Term: benefits, curPos: 10, freq: 1 }
, {Term: google, curPos: 11, freq: 1 }
, {Term: hahahahahahahahahahahahah, curPos: 12, freq: 1 }
, {Term: ha, curPos: 13, freq: 1 }
, {Term: frozen, curPos: 14, freq: 1 }
, {Term: google, curPos: 15, freq: 1 }
,  }]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[{ docId: 0, docPath: D:\IdeaWorkspace\SeachEngine/text/2.txt, {Term: activity, curPos: 0, freq: 1 }
, {Term: destination, curPos: 1, freq: 1 }
, {Term: emergency, curPos: 2, freq: 1 }
, {Term: 26%, curPos: 3, freq: 1 }
, {Term: u571, curPos: 4, freq: 1 }
, {Term: capital, curPos: 7, freq: 1 }
, {Term: frozen, curPos: 9, freq: 1 }
, {Term: benefits, curPos: 10, freq: 1 }
, {Term: google, curPos: 11, freq: 1 }
, {Term: hahahahahahahahahahahahah, curPos: 12, freq: 1 }
, {Term: ha, curPos: 13, freq: 1 }
, {Term: frozen, curPos: 14, freq: 1 }
, {Term: google, curPos: 15, freq: 1 }
,  }]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testBuild -->
                <test-method
                        signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@5427c60c]"
                        started-at="2021-04-25T01:56:25Z" name="testBuild" data-provider="testDocumentBuilder"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[{ docId: 0, docPath: D:/Github_Repository/HustCs/Java/Lab/Experiment1Test/test/config/..//text/2.txt, {Term: activity, curPos: 0, freq: 1 }
, {Term: destination, curPos: 1, freq: 1 }
, {Term: emergency, curPos: 2, freq: 1 }
, {Term: because, curPos: 5, freq: 1 }
, {Term: hence, curPos: 6, freq: 1 }
, {Term: capital, curPos: 7, freq: 1 }
, {Term: i, curPos: 8, freq: 1 }
, {Term: frozen, curPos: 9, freq: 1 }
, {Term: benefits, curPos: 10, freq: 1 }
, {Term: google, curPos: 11, freq: 1 }
, {Term: hahahahahahahahahahahahah, curPos: 12, freq: 1 }
, {Term: ha, curPos: 13, freq: 1 }
, {Term: frozen, curPos: 14, freq: 1 }
, {Term: google, curPos: 15, freq: 1 }
,  }]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[{ docId: 0, docPath: D:\IdeaWorkspace\SeachEngine/text/2.txt, {Term: activity, curPos: 0, freq: 1 }
, {Term: destination, curPos: 1, freq: 1 }
, {Term: emergency, curPos: 2, freq: 1 }
, {Term: because, curPos: 5, freq: 1 }
, {Term: hence, curPos: 6, freq: 1 }
, {Term: capital, curPos: 7, freq: 1 }
, {Term: i, curPos: 8, freq: 1 }
, {Term: frozen, curPos: 9, freq: 1 }
, {Term: benefits, curPos: 10, freq: 1 }
, {Term: google, curPos: 11, freq: 1 }
, {Term: hahahahahahahahahahahahah, curPos: 12, freq: 1 }
, {Term: ha, curPos: 13, freq: 1 }
, {Term: frozen, curPos: 14, freq: 1 }
, {Term: google, curPos: 15, freq: 1 }
,  }]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testBuild -->
                <test-method
                        signature="testTestBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@5427c60c]"
                        started-at="2021-04-25T01:56:25Z" name="testTestBuild" data-provider="testDocumentBuilder"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[{ docId: 0, docPath: D:/Github_Repository/HustCs/Java/Lab/Experiment1Test/test/config/..//text/2.txt, {Term: activity, curPos: 0, freq: 1 }
, {Term: destination, curPos: 1, freq: 1 }
, {Term: emergency, curPos: 2, freq: 1 }
, {Term: capital, curPos: 7, freq: 1 }
, {Term: frozen, curPos: 9, freq: 1 }
, {Term: benefits, curPos: 10, freq: 1 }
, {Term: google, curPos: 11, freq: 1 }
, {Term: frozen, curPos: 14, freq: 1 }
, {Term: google, curPos: 15, freq: 1 }
,  }]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[{ docId: 0, docPath: D:\IdeaWorkspace\SeachEngine/text/2.txt, {Term: activity, curPos: 0, freq: 1 }
, {Term: destination, curPos: 1, freq: 1 }
, {Term: emergency, curPos: 2, freq: 1 }
, {Term: capital, curPos: 7, freq: 1 }
, {Term: frozen, curPos: 9, freq: 1 }
, {Term: benefits, curPos: 10, freq: 1 }
, {Term: google, curPos: 11, freq: 1 }
, {Term: frozen, curPos: 14, freq: 1 }
, {Term: google, curPos: 15, freq: 1 }
,  }]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testTestBuild -->
                <test-method
                        signature="testTestBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@5427c60c]"
                        started-at="2021-04-25T01:56:25Z" name="testTestBuild" data-provider="testDocumentBuilder"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[{ docId: 0, docPath: D:/Github_Repository/HustCs/Java/Lab/Experiment1Test/test/config/..//text/2.txt, {Term: activity, curPos: 0, freq: 1 }
, {Term: destination, curPos: 1, freq: 1 }
, {Term: emergency, curPos: 2, freq: 1 }
, {Term: capital, curPos: 7, freq: 1 }
, {Term: frozen, curPos: 9, freq: 1 }
, {Term: benefits, curPos: 10, freq: 1 }
, {Term: google, curPos: 11, freq: 1 }
, {Term: frozen, curPos: 14, freq: 1 }
, {Term: google, curPos: 15, freq: 1 }
,  }]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[{ docId: 0, docPath: D:\IdeaWorkspace\SeachEngine/text/2.txt, {Term: activity, curPos: 0, freq: 1 }
, {Term: destination, curPos: 1, freq: 1 }
, {Term: emergency, curPos: 2, freq: 1 }
, {Term: capital, curPos: 7, freq: 1 }
, {Term: frozen, curPos: 9, freq: 1 }
, {Term: benefits, curPos: 10, freq: 1 }
, {Term: google, curPos: 11, freq: 1 }
, {Term: frozen, curPos: 14, freq: 1 }
, {Term: google, curPos: 15, freq: 1 }
,  }]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testTestBuild -->
            </class> <!-- hust.cs.javacourse.search.index.DocumentBuilderTest -->
        </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/DocumentBuilderTest.java -->
        <test started-at="2021-04-25T01:56:25Z"
              name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/IndexTest.java"
              finished-at="2021-04-25T01:56:25Z" duration-ms="163">
            <class name="hust.cs.javacourse.search.index.IndexTest">
                <test-method
                        signature="testTestToString(hust.cs.javacourse.search.index.AbstractIndex, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@5e57643e]"
                        started-at="2021-04-25T01:56:25Z" name="testTestToString" data-provider="testIndex"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="1" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[docId-----docPath mapping
0---->D:\IdeaWorkspace\SeachEngine\text\1.txt
1---->D:\IdeaWorkspace\SeachEngine\text\2.txt
2---->D:\IdeaWorkspace\SeachEngine\text\3.txt
PostingList: 
activity---->{docId: 0, freq: 3, positions: [0, 1, 6]} -> {docId: 1, freq: 1, positions: [0]}
benefits---->{docId: 0, freq: 2, positions: [2, 7]} -> {docId: 1, freq: 1, positions: [10]}
capital---->{docId: 0, freq: 2, positions: [3, 8]} -> {docId: 1, freq: 1, positions: [7]}
destination---->{docId: 0, freq: 2, positions: [4, 9]} -> {docId: 1, freq: 1, positions: [1]}
emergency---->{docId: 0, freq: 1, positions: [10]} -> {docId: 1, freq: 1, positions: [2]}
fizzy---->{docId: 0, freq: 1, positions: [5]}
frozen---->{docId: 1, freq: 2, positions: [9, 14]}
google---->{docId: 1, freq: 2, positions: [11, 15]}
marketplace---->{docId: 2, freq: 1, positions: [0]}
medical---->{docId: 2, freq: 1, positions: [1]}
notification---->{docId: 2, freq: 1, positions: [3]}
peninsula---->{docId: 2, freq: 1, positions: [5]}
pollution---->{docId: 2, freq: 1, positions: [7]}
]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[[Ljava.lang.String;@4b40f651]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testTestToString -->
                <test-method
                        signature="testAddDocument([Lhust.cs.javacourse.search.index.AbstractIndex;, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@5e57643e]"
                        started-at="2021-04-25T01:56:25Z" name="testAddDocument" data-provider="testIndex"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractIndex;@3d3e5463]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[{ docId: 1, docPath: D:\IdeaWorkspace\SeachEngine/text/2.txt, {Term: activity, curPos: 0, freq: 1 }
, {Term: destination, curPos: 1, freq: 1 }
, {Term: emergency, curPos: 2, freq: 1 }
, {Term: capital, curPos: 7, freq: 1 }
, {Term: frozen, curPos: 9, freq: 1 }
, {Term: benefits, curPos: 10, freq: 1 }
, {Term: google, curPos: 11, freq: 1 }
, {Term: frozen, curPos: 14, freq: 1 }
, {Term: google, curPos: 15, freq: 1 }
,  }]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testAddDocument -->
                <test-method
                        signature="testLoad(hust.cs.javacourse.search.index.AbstractIndex, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@5e57643e]"
                        started-at="2021-04-25T01:56:25Z" name="testLoad" data-provider="testIndex"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="2" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[docId-----docPath mapping
0---->D:\IdeaWorkspace\SeachEngine\text\1.txt
1---->D:\IdeaWorkspace\SeachEngine\text\2.txt
2---->D:\IdeaWorkspace\SeachEngine\text\3.txt
PostingList: 
activity---->{docId: 0, freq: 3, positions: [0, 1, 6]} -> {docId: 1, freq: 1, positions: [0]}
benefits---->{docId: 0, freq: 2, positions: [2, 7]} -> {docId: 1, freq: 1, positions: [10]}
capital---->{docId: 0, freq: 2, positions: [3, 8]} -> {docId: 1, freq: 1, positions: [7]}
destination---->{docId: 0, freq: 2, positions: [4, 9]} -> {docId: 1, freq: 1, positions: [1]}
emergency---->{docId: 0, freq: 1, positions: [10]} -> {docId: 1, freq: 1, positions: [2]}
fizzy---->{docId: 0, freq: 1, positions: [5]}
frozen---->{docId: 1, freq: 2, positions: [9, 14]}
google---->{docId: 1, freq: 2, positions: [11, 15]}
marketplace---->{docId: 2, freq: 1, positions: [0]}
medical---->{docId: 2, freq: 1, positions: [1]}
notification---->{docId: 2, freq: 1, positions: [3]}
peninsula---->{docId: 2, freq: 1, positions: [5]}
pollution---->{docId: 2, freq: 1, positions: [7]}
]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[D:/Github_Repository/HustCs/Java/Lab/Experiment1Test/test/config/..//index/index_1_2_3_txt.dat]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testLoad -->
                <test-method
                        signature="testSave(hust.cs.javacourse.search.index.AbstractIndex, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@5e57643e]"
                        started-at="2021-04-25T01:56:25Z" name="testSave" data-provider="testIndex"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="3" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[docId-----docPath mapping
0---->D:\IdeaWorkspace\SeachEngine\text\1.txt
1---->D:\IdeaWorkspace\SeachEngine\text\2.txt
2---->D:\IdeaWorkspace\SeachEngine\text\3.txt
PostingList: 
activity---->{docId: 0, freq: 3, positions: [0, 1, 6]} -> {docId: 1, freq: 1, positions: [0]}
benefits---->{docId: 0, freq: 2, positions: [2, 7]} -> {docId: 1, freq: 1, positions: [10]}
capital---->{docId: 0, freq: 2, positions: [3, 8]} -> {docId: 1, freq: 1, positions: [7]}
destination---->{docId: 0, freq: 2, positions: [4, 9]} -> {docId: 1, freq: 1, positions: [1]}
emergency---->{docId: 0, freq: 1, positions: [10]} -> {docId: 1, freq: 1, positions: [2]}
fizzy---->{docId: 0, freq: 1, positions: [5]}
frozen---->{docId: 1, freq: 2, positions: [9, 14]}
google---->{docId: 1, freq: 2, positions: [11, 15]}
marketplace---->{docId: 2, freq: 1, positions: [0]}
medical---->{docId: 2, freq: 1, positions: [1]}
notification---->{docId: 2, freq: 1, positions: [3]}
peninsula---->{docId: 2, freq: 1, positions: [5]}
pollution---->{docId: 2, freq: 1, positions: [7]}
]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[D:/Github_Repository/HustCs/Java/Lab/Experiment1Test/test/config/..//index/index_1_2_3_txt.dat]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testSave -->
                <test-method
                        signature="testSearch(hust.cs.javacourse.search.index.AbstractIndex, hust.cs.javacourse.search.index.AbstractPostingList)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@5e57643e]"
                        started-at="2021-04-25T01:56:25Z" name="testSearch" data-provider="testIndex"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[docId-----docPath mapping
0---->D:\IdeaWorkspace\SeachEngine\text\1.txt
1---->D:\IdeaWorkspace\SeachEngine\text\2.txt
2---->D:\IdeaWorkspace\SeachEngine\text\3.txt
PostingList: 
activity---->{docId: 0, freq: 3, positions: [0, 1, 6]} -> {docId: 1, freq: 1, positions: [0]}
benefits---->{docId: 0, freq: 2, positions: [2, 7]} -> {docId: 1, freq: 1, positions: [10]}
capital---->{docId: 0, freq: 2, positions: [3, 8]} -> {docId: 1, freq: 1, positions: [7]}
destination---->{docId: 0, freq: 2, positions: [4, 9]} -> {docId: 1, freq: 1, positions: [1]}
emergency---->{docId: 0, freq: 1, positions: [10]} -> {docId: 1, freq: 1, positions: [2]}
fizzy---->{docId: 0, freq: 1, positions: [5]}
frozen---->{docId: 1, freq: 2, positions: [9, 14]}
google---->{docId: 1, freq: 2, positions: [11, 15]}
marketplace---->{docId: 2, freq: 1, positions: [0]}
medical---->{docId: 2, freq: 1, positions: [1]}
notification---->{docId: 2, freq: 1, positions: [3]}
peninsula---->{docId: 2, freq: 1, positions: [5]}
pollution---->{docId: 2, freq: 1, positions: [7]}
]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[{docId: 0, freq: 3, positions: [0, 1, 6]} -> {docId: 1, freq: 1, positions: [0]}
]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testSearch -->
                <test-method
                        signature="testGetDictionary(hust.cs.javacourse.search.index.AbstractIndex, java.util.Set)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@5e57643e]"
                        started-at="2021-04-25T01:56:25Z" name="testGetDictionary" data-provider="testIndex"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[docId-----docPath mapping
0---->D:\IdeaWorkspace\SeachEngine\text\1.txt
1---->D:\IdeaWorkspace\SeachEngine\text\2.txt
2---->D:\IdeaWorkspace\SeachEngine\text\3.txt
PostingList: 
activity---->{docId: 0, freq: 3, positions: [0, 1, 6]} -> {docId: 1, freq: 1, positions: [0]}
benefits---->{docId: 0, freq: 2, positions: [2, 7]} -> {docId: 1, freq: 1, positions: [10]}
capital---->{docId: 0, freq: 2, positions: [3, 8]} -> {docId: 1, freq: 1, positions: [7]}
destination---->{docId: 0, freq: 2, positions: [4, 9]} -> {docId: 1, freq: 1, positions: [1]}
emergency---->{docId: 0, freq: 1, positions: [10]} -> {docId: 1, freq: 1, positions: [2]}
fizzy---->{docId: 0, freq: 1, positions: [5]}
frozen---->{docId: 1, freq: 2, positions: [9, 14]}
google---->{docId: 1, freq: 2, positions: [11, 15]}
marketplace---->{docId: 2, freq: 1, positions: [0]}
medical---->{docId: 2, freq: 1, positions: [1]}
notification---->{docId: 2, freq: 1, positions: [3]}
peninsula---->{docId: 2, freq: 1, positions: [5]}
pollution---->{docId: 2, freq: 1, positions: [7]}
]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[[activity, benefits, capital, destination, emergency, fizzy, frozen, google, marketplace, medical, notification, peninsula, pollution]]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testGetDictionary -->
                <test-method
                        signature="testWriteObject(hust.cs.javacourse.search.index.AbstractIndex, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@5e57643e]"
                        started-at="2021-04-25T01:56:25Z" name="testWriteObject" data-provider="testIndex"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="3" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[docId-----docPath mapping
0---->D:\IdeaWorkspace\SeachEngine\text\1.txt
1---->D:\IdeaWorkspace\SeachEngine\text\2.txt
2---->D:\IdeaWorkspace\SeachEngine\text\3.txt
PostingList: 
activity---->{docId: 0, freq: 3, positions: [0, 1, 6]} -> {docId: 1, freq: 1, positions: [0]}
benefits---->{docId: 0, freq: 2, positions: [2, 7]} -> {docId: 1, freq: 1, positions: [10]}
capital---->{docId: 0, freq: 2, positions: [3, 8]} -> {docId: 1, freq: 1, positions: [7]}
destination---->{docId: 0, freq: 2, positions: [4, 9]} -> {docId: 1, freq: 1, positions: [1]}
emergency---->{docId: 0, freq: 1, positions: [10]} -> {docId: 1, freq: 1, positions: [2]}
fizzy---->{docId: 0, freq: 1, positions: [5]}
frozen---->{docId: 1, freq: 2, positions: [9, 14]}
google---->{docId: 1, freq: 2, positions: [11, 15]}
marketplace---->{docId: 2, freq: 1, positions: [0]}
medical---->{docId: 2, freq: 1, positions: [1]}
notification---->{docId: 2, freq: 1, positions: [3]}
peninsula---->{docId: 2, freq: 1, positions: [5]}
pollution---->{docId: 2, freq: 1, positions: [7]}
]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[D:/Github_Repository/HustCs/Java/Lab/Experiment1Test/test/config/..//index/index_1_2_3_txt.dat]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testWriteObject -->
                <test-method
                        signature="testReadObject(hust.cs.javacourse.search.index.AbstractIndex, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@5e57643e]"
                        started-at="2021-04-25T01:56:25Z" name="testReadObject" data-provider="testIndex"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="2" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[docId-----docPath mapping
0---->D:\IdeaWorkspace\SeachEngine\text\1.txt
1---->D:\IdeaWorkspace\SeachEngine\text\2.txt
2---->D:\IdeaWorkspace\SeachEngine\text\3.txt
PostingList: 
activity---->{docId: 0, freq: 3, positions: [0, 1, 6]} -> {docId: 1, freq: 1, positions: [0]}
benefits---->{docId: 0, freq: 2, positions: [2, 7]} -> {docId: 1, freq: 1, positions: [10]}
capital---->{docId: 0, freq: 2, positions: [3, 8]} -> {docId: 1, freq: 1, positions: [7]}
destination---->{docId: 0, freq: 2, positions: [4, 9]} -> {docId: 1, freq: 1, positions: [1]}
emergency---->{docId: 0, freq: 1, positions: [10]} -> {docId: 1, freq: 1, positions: [2]}
fizzy---->{docId: 0, freq: 1, positions: [5]}
frozen---->{docId: 1, freq: 2, positions: [9, 14]}
google---->{docId: 1, freq: 2, positions: [11, 15]}
marketplace---->{docId: 2, freq: 1, positions: [0]}
medical---->{docId: 2, freq: 1, positions: [1]}
notification---->{docId: 2, freq: 1, positions: [3]}
peninsula---->{docId: 2, freq: 1, positions: [5]}
pollution---->{docId: 2, freq: 1, positions: [7]}
]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[D:/Github_Repository/HustCs/Java/Lab/Experiment1Test/test/config/..//index/index_1_2_3_txt.dat]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testReadObject -->
                <test-method
                        signature="testOptimize(hust.cs.javacourse.search.index.AbstractIndex, hust.cs.javacourse.search.index.AbstractIndex)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@5e57643e]"
                        started-at="2021-04-25T01:56:25Z" name="testOptimize" data-provider="testIndex"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[docId-----docPath mapping
0---->D:\IdeaWorkspace\SeachEngine\text\1.txt
1---->D:\IdeaWorkspace\SeachEngine\text\2.txt
2---->D:\IdeaWorkspace\SeachEngine\text\3.txt
PostingList: 
activity---->{docId: 0, freq: 3, positions: [0, 1, 6]} -> {docId: 1, freq: 1, positions: [0]}
benefits---->{docId: 0, freq: 2, positions: [2, 7]} -> {docId: 1, freq: 1, positions: [10]}
capital---->{docId: 0, freq: 2, positions: [3, 8]} -> {docId: 1, freq: 1, positions: [7]}
destination---->{docId: 0, freq: 2, positions: [4, 9]} -> {docId: 1, freq: 1, positions: [1]}
emergency---->{docId: 0, freq: 1, positions: [10]} -> {docId: 1, freq: 1, positions: [2]}
fizzy---->{docId: 0, freq: 1, positions: [5]}
frozen---->{docId: 1, freq: 2, positions: [9, 14]}
google---->{docId: 1, freq: 2, positions: [11, 15]}
marketplace---->{docId: 2, freq: 1, positions: [0]}
medical---->{docId: 2, freq: 1, positions: [1]}
notification---->{docId: 2, freq: 1, positions: [3]}
peninsula---->{docId: 2, freq: 1, positions: [5]}
pollution---->{docId: 2, freq: 1, positions: [7]}
]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[docId-----docPath mapping
0---->D:\IdeaWorkspace\SeachEngine\text\1.txt
1---->D:\IdeaWorkspace\SeachEngine\text\2.txt
2---->D:\IdeaWorkspace\SeachEngine\text\3.txt
PostingList: 
activity---->{docId: 0, freq: 3, positions: [0, 1, 6]} -> {docId: 1, freq: 1, positions: [0]}
benefits---->{docId: 0, freq: 2, positions: [2, 7]} -> {docId: 1, freq: 1, positions: [10]}
capital---->{docId: 0, freq: 2, positions: [3, 8]} -> {docId: 1, freq: 1, positions: [7]}
destination---->{docId: 0, freq: 2, positions: [4, 9]} -> {docId: 1, freq: 1, positions: [1]}
emergency---->{docId: 0, freq: 1, positions: [10]} -> {docId: 1, freq: 1, positions: [2]}
fizzy---->{docId: 0, freq: 1, positions: [5]}
frozen---->{docId: 1, freq: 2, positions: [9, 14]}
google---->{docId: 1, freq: 2, positions: [11, 15]}
marketplace---->{docId: 2, freq: 1, positions: [0]}
medical---->{docId: 2, freq: 1, positions: [1]}
notification---->{docId: 2, freq: 1, positions: [3]}
peninsula---->{docId: 2, freq: 1, positions: [5]}
pollution---->{docId: 2, freq: 1, positions: [7]}
]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testOptimize -->
                <test-method
                        signature="testGetDocName(hust.cs.javacourse.search.index.AbstractIndex, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@5e57643e]"
                        started-at="2021-04-25T01:56:25Z" name="testGetDocName" data-provider="testIndex"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[docId-----docPath mapping
0---->D:\IdeaWorkspace\SeachEngine\text\1.txt
1---->D:\IdeaWorkspace\SeachEngine\text\2.txt
2---->D:\IdeaWorkspace\SeachEngine\text\3.txt
PostingList: 
activity---->{docId: 0, freq: 3, positions: [0, 1, 6]} -> {docId: 1, freq: 1, positions: [0]}
benefits---->{docId: 0, freq: 2, positions: [2, 7]} -> {docId: 1, freq: 1, positions: [10]}
capital---->{docId: 0, freq: 2, positions: [3, 8]} -> {docId: 1, freq: 1, positions: [7]}
destination---->{docId: 0, freq: 2, positions: [4, 9]} -> {docId: 1, freq: 1, positions: [1]}
emergency---->{docId: 0, freq: 1, positions: [10]} -> {docId: 1, freq: 1, positions: [2]}
fizzy---->{docId: 0, freq: 1, positions: [5]}
frozen---->{docId: 1, freq: 2, positions: [9, 14]}
google---->{docId: 1, freq: 2, positions: [11, 15]}
marketplace---->{docId: 2, freq: 1, positions: [0]}
medical---->{docId: 2, freq: 1, positions: [1]}
notification---->{docId: 2, freq: 1, positions: [3]}
peninsula---->{docId: 2, freq: 1, positions: [5]}
pollution---->{docId: 2, freq: 1, positions: [7]}
]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[[Ljava.lang.String;@64a40280]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testGetDocName -->
            </class> <!-- hust.cs.javacourse.search.index.IndexTest -->
        </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/IndexTest.java -->
        <test started-at="2021-04-25T01:56:25Z"
              name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/IndexBuilderTest.java"
              finished-at="2021-04-25T01:56:25Z" duration-ms="18">
            <class name="hust.cs.javacourse.search.index.IndexBuilderTest">
                <test-method
                        signature="testBuildIndex(hust.cs.javacourse.search.index.AbstractIndex, hust.cs.javacourse.search.index.AbstractIndex)[pri:0, instance:hust.cs.javacourse.search.index.IndexBuilderTest@60438a68]"
                        started-at="2021-04-25T01:56:25Z" name="testBuildIndex" data-provider="testIndexBuilder"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[docId-----docPath mapping
0---->D:\Github_Repository\HustCs\Java\Lab\Experiment1Test\test\text\1.txt
1---->D:\Github_Repository\HustCs\Java\Lab\Experiment1Test\test\text\2.txt
2---->D:\Github_Repository\HustCs\Java\Lab\Experiment1Test\test\text\3.txt
PostingList: 
activity---->{docId: 0, freq: 3, positions: [0, 1, 6]} -> {docId: 1, freq: 1, positions: [0]}
benefits---->{docId: 0, freq: 2, positions: [2, 7]} -> {docId: 1, freq: 1, positions: [10]}
capital---->{docId: 0, freq: 2, positions: [3, 8]} -> {docId: 1, freq: 1, positions: [7]}
destination---->{docId: 0, freq: 2, positions: [4, 9]} -> {docId: 1, freq: 1, positions: [1]}
emergency---->{docId: 0, freq: 1, positions: [10]} -> {docId: 1, freq: 1, positions: [2]}
fizzy---->{docId: 0, freq: 1, positions: [5]}
frozen---->{docId: 1, freq: 2, positions: [9, 14]}
google---->{docId: 1, freq: 2, positions: [11, 15]}
marketplace---->{docId: 2, freq: 1, positions: [0]}
medical---->{docId: 2, freq: 1, positions: [1]}
notification---->{docId: 2, freq: 1, positions: [3]}
peninsula---->{docId: 2, freq: 1, positions: [5]}
pollution---->{docId: 2, freq: 1, positions: [7]}
]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[docId-----docPath mapping
0---->D:\IdeaWorkspace\SeachEngine\text\1.txt
1---->D:\IdeaWorkspace\SeachEngine\text\2.txt
2---->D:\IdeaWorkspace\SeachEngine\text\3.txt
PostingList: 
activity---->{docId: 0, freq: 3, positions: [0, 1, 6]} -> {docId: 1, freq: 1, positions: [0]}
benefits---->{docId: 0, freq: 2, positions: [2, 7]} -> {docId: 1, freq: 1, positions: [10]}
capital---->{docId: 0, freq: 2, positions: [3, 8]} -> {docId: 1, freq: 1, positions: [7]}
destination---->{docId: 0, freq: 2, positions: [4, 9]} -> {docId: 1, freq: 1, positions: [1]}
emergency---->{docId: 0, freq: 1, positions: [10]} -> {docId: 1, freq: 1, positions: [2]}
fizzy---->{docId: 0, freq: 1, positions: [5]}
frozen---->{docId: 1, freq: 2, positions: [9, 14]}
google---->{docId: 1, freq: 2, positions: [11, 15]}
marketplace---->{docId: 2, freq: 1, positions: [0]}
medical---->{docId: 2, freq: 1, positions: [1]}
notification---->{docId: 2, freq: 1, positions: [3]}
peninsula---->{docId: 2, freq: 1, positions: [5]}
pollution---->{docId: 2, freq: 1, positions: [7]}
]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testBuildIndex -->
            </class> <!-- hust.cs.javacourse.search.index.IndexBuilderTest -->
        </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/IndexBuilderTest.java -->
        <test started-at="2021-04-25T01:56:25Z"
              name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/query/HitTest.java"
              finished-at="2021-04-25T01:56:25Z" duration-ms="31">
            <class name="hust.cs.javacourse.search.query.HitTest">
                <test-method
                        signature="testGetDocId(hust.cs.javacourse.search.query.AbstractHit, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@2a40cd94]"
                        started-at="2021-04-25T01:56:25Z" name="testGetDocId" data-provider="testHit"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[
---------------------------------------------------------

docId:  0

docPath:  D:\IdeaWorkspace\SeachEngine\text\1.txt

content: 
\*activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism*\

score:  -3.0

activity---->{docId: 0, freq: 3, positions: [0, 1, 6]}
]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[0]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testGetDocId -->
                <test-method
                        signature="testGetDocId(hust.cs.javacourse.search.query.AbstractHit, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@2a40cd94]"
                        started-at="2021-04-25T01:56:25Z" name="testGetDocId" data-provider="testHit"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[
---------------------------------------------------------

docId:  1

docPath:  D:\IdeaWorkspace\SeachEngine\text\2.txt

content: 
\*activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google*\

score:  -1.0

activity---->{docId: 1, freq: 1, positions: [0]}
]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[1]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testGetDocId -->
                <test-method
                        signature="testGetDocPath(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@2a40cd94]"
                        started-at="2021-04-25T01:56:25Z" name="testGetDocPath" data-provider="testHit"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[
---------------------------------------------------------

docId:  0

docPath:  D:\IdeaWorkspace\SeachEngine\text\1.txt

content: 
\*activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism*\

score:  -3.0

activity---->{docId: 0, freq: 3, positions: [0, 1, 6]}
]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[D:\IdeaWorkspace\SeachEngine\text\1.txt]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testGetDocPath -->
                <test-method
                        signature="testGetDocPath(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@2a40cd94]"
                        started-at="2021-04-25T01:56:25Z" name="testGetDocPath" data-provider="testHit"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[
---------------------------------------------------------

docId:  1

docPath:  D:\IdeaWorkspace\SeachEngine\text\2.txt

content: 
\*activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google*\

score:  -1.0

activity---->{docId: 1, freq: 1, positions: [0]}
]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[D:\IdeaWorkspace\SeachEngine\text\2.txt]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testGetDocPath -->
                <test-method
                        signature="testGetContent(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@2a40cd94]"
                        started-at="2021-04-25T01:56:25Z" name="testGetContent" data-provider="testHit"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[
---------------------------------------------------------

docId:  0

docPath:  D:\IdeaWorkspace\SeachEngine\text\1.txt

content: 
\*activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism*\

score:  -3.0

activity---->{docId: 0, freq: 3, positions: [0, 1, 6]}
]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testGetContent -->
                <test-method
                        signature="testGetContent(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@2a40cd94]"
                        started-at="2021-04-25T01:56:25Z" name="testGetContent" data-provider="testHit"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[
---------------------------------------------------------

docId:  1

docPath:  D:\IdeaWorkspace\SeachEngine\text\2.txt

content: 
\*activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google*\

score:  -1.0

activity---->{docId: 1, freq: 1, positions: [0]}
]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testGetContent -->
                <test-method
                        signature="testSetContent(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@2a40cd94]"
                        started-at="2021-04-25T01:56:25Z" name="testSetContent" data-provider="testHit"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[
---------------------------------------------------------

docId:  0

docPath:  D:\IdeaWorkspace\SeachEngine\text\1.txt

content: 
\*new content1*\

score:  -3.0

activity---->{docId: 0, freq: 3, positions: [0, 1, 6]}
]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[new content1]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testSetContent -->
                <test-method
                        signature="testSetContent(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@2a40cd94]"
                        started-at="2021-04-25T01:56:25Z" name="testSetContent" data-provider="testHit"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[
---------------------------------------------------------

docId:  1

docPath:  D:\IdeaWorkspace\SeachEngine\text\2.txt

content: 
\*new content2*\

score:  -1.0

activity---->{docId: 1, freq: 1, positions: [0]}
]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[new content2]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testSetContent -->
                <test-method
                        signature="testGetScore(hust.cs.javacourse.search.query.AbstractHit, double)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@2a40cd94]"
                        started-at="2021-04-25T01:56:25Z" name="testGetScore" data-provider="testHit"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[
---------------------------------------------------------

docId:  0

docPath:  D:\IdeaWorkspace\SeachEngine\text\1.txt

content: 
\*activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism*\

score:  -3.0

activity---->{docId: 0, freq: 3, positions: [0, 1, 6]}
]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[-3.0]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testGetScore -->
                <test-method
                        signature="testGetScore(hust.cs.javacourse.search.query.AbstractHit, double)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@2a40cd94]"
                        started-at="2021-04-25T01:56:25Z" name="testGetScore" data-provider="testHit"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[
---------------------------------------------------------

docId:  1

docPath:  D:\IdeaWorkspace\SeachEngine\text\2.txt

content: 
\*activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google*\

score:  -1.0

activity---->{docId: 1, freq: 1, positions: [0]}
]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[-1.0]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testGetScore -->
                <test-method
                        signature="testSetScore(hust.cs.javacourse.search.query.AbstractHit, double)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@2a40cd94]"
                        started-at="2021-04-25T01:56:25Z" name="testSetScore" data-provider="testHit"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[
---------------------------------------------------------

docId:  0

docPath:  D:\IdeaWorkspace\SeachEngine\text\1.txt

content: 
\*activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism*\

score:  3.0

activity---->{docId: 0, freq: 3, positions: [0, 1, 6]}
]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[3.0]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testSetScore -->
                <test-method
                        signature="testSetScore(hust.cs.javacourse.search.query.AbstractHit, double)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@2a40cd94]"
                        started-at="2021-04-25T01:56:25Z" name="testSetScore" data-provider="testHit"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[
---------------------------------------------------------

docId:  1

docPath:  D:\IdeaWorkspace\SeachEngine\text\2.txt

content: 
\*activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google*\

score:  1.0

activity---->{docId: 1, freq: 1, positions: [0]}
]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[1.0]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testSetScore -->
                <test-method
                        signature="testGetTermPostingMapping(hust.cs.javacourse.search.query.AbstractHit, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@2a40cd94]"
                        started-at="2021-04-25T01:56:25Z" name="testGetTermPostingMapping" data-provider="testHit"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[
---------------------------------------------------------

docId:  0

docPath:  D:\IdeaWorkspace\SeachEngine\text\1.txt

content: 
\*activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism*\

score:  -3.0

activity---->{docId: 0, freq: 3, positions: [0, 1, 6]}
]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[1]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testGetTermPostingMapping -->
                <test-method
                        signature="testGetTermPostingMapping(hust.cs.javacourse.search.query.AbstractHit, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@2a40cd94]"
                        started-at="2021-04-25T01:56:25Z" name="testGetTermPostingMapping" data-provider="testHit"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[
---------------------------------------------------------

docId:  1

docPath:  D:\IdeaWorkspace\SeachEngine\text\2.txt

content: 
\*activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google*\

score:  -1.0

activity---->{docId: 1, freq: 1, positions: [0]}
]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[1]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testGetTermPostingMapping -->
                <test-method
                        signature="testTestToString(hust.cs.javacourse.search.query.AbstractHit, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@2a40cd94]"
                        started-at="2021-04-25T01:56:25Z" name="testTestToString" data-provider="testHit"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[
---------------------------------------------------------

docId:  0

docPath:  D:\IdeaWorkspace\SeachEngine\text\1.txt

content: 
\*activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism*\

score:  -3.0

activity---->{docId: 0, freq: 3, positions: [0, 1, 6]}
]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[[Ljava.lang.String;@53fd0d10]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testTestToString -->
                <test-method
                        signature="testCompareTo([Lhust.cs.javacourse.search.query.AbstractHit;, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@2a40cd94]"
                        started-at="2021-04-25T01:56:25Z" name="testCompareTo" data-provider="testHit"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@535779e4]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[-2]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testCompareTo -->
            </class> <!-- hust.cs.javacourse.search.query.HitTest -->
        </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/query/HitTest.java -->
        <test started-at="2021-04-25T01:56:25Z"
              name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/query/IndexSearcherTest.java"
              finished-at="2021-04-25T01:56:25Z" duration-ms="31">
            <class name="hust.cs.javacourse.search.index.PostingListTest">
                <test-method is-config="true"
                             signature="beforeSuite()[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@77846d2c]"
                             started-at="2021-04-25T01:56:25Z" name="beforeSuite" finished-at="2021-04-25T01:56:25Z"
                             duration-ms="7" status="PASS">
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- beforeSuite -->
            </class> <!-- hust.cs.javacourse.search.index.PostingListTest -->
            <class name="hust.cs.javacourse.search.query.IndexSearcherTest">
                <test-method
                        signature="testSearch([Lhust.cs.javacourse.search.query.AbstractHit;, [Lhust.cs.javacourse.search.query.AbstractHit;)[pri:0, instance:hust.cs.javacourse.search.query.IndexSearcherTest@101df177]"
                        started-at="2021-04-25T01:56:25Z" name="testSearch" data-provider="testIndexSearcher"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@7502291e]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@17aad511]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testSearch -->
                <test-method
                        signature="testSearch([Lhust.cs.javacourse.search.query.AbstractHit;, [Lhust.cs.javacourse.search.query.AbstractHit;)[pri:0, instance:hust.cs.javacourse.search.query.IndexSearcherTest@101df177]"
                        started-at="2021-04-25T01:56:25Z" name="testSearch" data-provider="testIndexSearcher"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="PASS">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@6187d1f5]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@2445445a]]>
                            </value>
                        </param>
                    </params>
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testSearch -->
                <test-method
                        signature="testTestSearch([Lhust.cs.javacourse.search.query.AbstractHit;, [Lhust.cs.javacourse.search.query.AbstractHit;)[pri:0, instance:hust.cs.javacourse.search.query.IndexSearcherTest@101df177]"
                        started-at="2021-04-25T01:56:25Z" name="testTestSearch" data-provider="testIndexSearcher"
                        finished-at="2021-04-25T01:56:25Z" duration-ms="0" status="FAIL">
                    <params>
                        <param index="0">
                            <value>
                                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@331acdad]]>
                            </value>
                        </param>
                        <param index="1">
                            <value>
                                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@41d426b5]]>
                            </value>
                        </param>
                    </params>
                    <exception class="java.lang.AssertionError">
                        <message>
                            <![CDATA[expected [true] but found [false]]]>
                        </message>
                        <full-stacktrace>
                            <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at hust.cs.javacourse.search.query.IndexSearcherTest.testTestSearch(IndexSearcherTest.java:22)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.TestNG.privateMain(TestNG.java:1354)
at org.testng.TestNG.main(TestNG.java:1323)
]]>
                        </full-stacktrace>
                    </exception> <!-- java.lang.AssertionError -->
                    <reporter-output>
                    </reporter-output>
                </test-method> <!-- testTestSearch -->
            </class> <!-- hust.cs.javacourse.search.query.IndexSearcherTest -->
        </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/query/IndexSearcherTest.java -->
    </suite> <!-- All Test Suite -->
</testng-results>
